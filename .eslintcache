[{"C:\\Users\\USER\\desktop\\sorting-visualizer\\src\\index.js":"1","C:\\Users\\USER\\desktop\\sorting-visualizer\\src\\components\\App.jsx":"2","C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\index.js":"3","C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\App.jsx":"4","C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\theme.js":"5","C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\Bubble\\Bubble.jsx":"6","C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\Bubble\\BubbleHelpers.js":"7","C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\Insertion\\Insertion.jsx":"8","C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\Selection\\Selection.jsx":"9","C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\Merge\\Merge.jsx":"10","C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\Quick\\Quick.jsx":"11","C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\Heap\\Heap.jsx":"12","C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\Home\\Home.jsx":"13","C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\About\\About.jsx":"14","C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\StartSortilizing\\SortingVisualizer.jsx":"15","C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\Insertion\\InsertionHelpers.js":"16","C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\Selection\\SelectionHelpers.js":"17"},{"size":257,"mtime":1609256125377,"results":"18","hashOfConfig":"19"},{"size":9517,"mtime":1610033830512,"results":"20","hashOfConfig":"19"},{"size":257,"mtime":1609256125377,"results":"21","hashOfConfig":"22"},{"size":6892,"mtime":1612536536779,"results":"23","hashOfConfig":"22"},{"size":257,"mtime":1610369783003,"results":"24","hashOfConfig":"22"},{"size":7029,"mtime":1612295082358,"results":"25","hashOfConfig":"22"},{"size":2422,"mtime":1612295080977,"results":"26","hashOfConfig":"22"},{"size":7564,"mtime":1612536845877,"results":"27","hashOfConfig":"22"},{"size":7404,"mtime":1612536744431,"results":"28","hashOfConfig":"22"},{"size":9924,"mtime":1612536800426,"results":"29","hashOfConfig":"22"},{"size":2822,"mtime":1610390696694,"results":"30","hashOfConfig":"22"},{"size":2887,"mtime":1610390698681,"results":"31","hashOfConfig":"22"},{"size":2278,"mtime":1611784745493,"results":"32","hashOfConfig":"22"},{"size":539,"mtime":1610651162880,"results":"33","hashOfConfig":"22"},{"size":1399,"mtime":1610391263956,"results":"34","hashOfConfig":"22"},{"size":2597,"mtime":1612295074674,"results":"35","hashOfConfig":"22"},{"size":2537,"mtime":1612536742106,"results":"36","hashOfConfig":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"11miz2s",{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"263xyh",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\USER\\desktop\\sorting-visualizer\\src\\index.js",[],["79","80"],"C:\\Users\\USER\\desktop\\sorting-visualizer\\src\\components\\App.jsx",["81","82"],"import React, { useState } from \"react\";\r\nimport About from './About'\r\nimport SortingVisualizer from \"./SortingVisualizer\";\r\nimport Home from \"./Home\";\r\nimport Bubble from \"./Bubble\";\r\nimport Selection from \"./Selection\";\r\nimport Insertion from \"./Insertion\";\r\nimport Merge from \"./Merge\";\r\nimport Quick from './Quick'\r\nimport Heap from './Heap'\r\nimport { Route, Link, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nexport var milliseconds;\r\nexport var ARRAY_LENGTH;\r\nvar propss;\r\n\r\nfunction App() {\r\n  const [ArrayLength, setArrayLength] = useState(20);\r\n  const [millisecond, setMilliSeconds] = useState(360);\r\n  const [width, setWidth] = useState(20);\r\n  const [margin, setMargin] = useState(4);\r\n\r\n  ARRAY_LENGTH = 20;\r\n  //milliseconds = 400;\r\n  //console.log(ARRAY_LENGTH);\r\n  const handleClick25 = () => {\r\n    setMilliSeconds(800);\r\n  };\r\n  const handleClick5 = () => {\r\n    setMilliSeconds(550);\r\n  };\r\n  const handleClick1 = () => {\r\n    setMilliSeconds(360);\r\n  };\r\n  const handleClick15 = () => {\r\n    setMilliSeconds(200);\r\n  };\r\n  const handleClick75 = () => {\r\n    setMilliSeconds(90);\r\n  };\r\n  const handleClick2 = () => {\r\n    setMilliSeconds(45);\r\n  };\r\n\r\n  const handleClickSize5 = () => {\r\n    setArrayLength(5);\r\n    setWidth(50);\r\n    setMargin(7);\r\n  };\r\n  const handleClickSize10 = () => {\r\n    setArrayLength(10);\r\n    setWidth(35);\r\n    setMargin(5.5);\r\n  };\r\n  const handleClickSize20 = () => {\r\n    setArrayLength(20);\r\n    setWidth(20);\r\n    setMargin(4);\r\n  };\r\n  const handleClickSize50 = () => {\r\n    setArrayLength(50);\r\n    setWidth(10);\r\n    setMargin(3);\r\n  };\r\n  const handleClickSize100 = () => {\r\n    setArrayLength(100);\r\n    setWidth(5);\r\n    setMargin(1.75);\r\n  };\r\n  const handleClickSize200 = () => {\r\n    setArrayLength(200);\r\n    setWidth(2);\r\n    setMargin(1.2);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section>\r\n        <Navbar className=\"navigation\" bg=\"light\" expand=\"lg\">\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand className=\"brand-name\">Sortilizer</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto navs\">\r\n              <LinkContainer to=\"/\">\r\n                <Nav.Link className=\"navigation-link\">Home</Nav.Link>\r\n              </LinkContainer>\r\n              <LinkContainer to=\"/about\">\r\n                <Nav.Link className=\"navigation-link\">About</Nav.Link>\r\n              </LinkContainer>\r\n            </Nav>\r\n            <Nav className=\"ml-auto navs\">\r\n              <NavDropdown\r\n                className=\"dropdown\"\r\n                title=\"Sorting Algorithms\"\r\n                id=\"basic-nav-dropdown\"\r\n              >\r\n                <LinkContainer to=\"/bubble-sort\">\r\n                  <NavDropdown.Item className=\"dropdown-item\">\r\n                    Bubble Sort\r\n                  </NavDropdown.Item>\r\n                </LinkContainer>\r\n                <NavDropdown.Divider />\r\n                <LinkContainer to=\"/selection-sort\">\r\n                  <NavDropdown.Item className=\"dropdown-item\">\r\n                    Selection Sort\r\n                  </NavDropdown.Item>\r\n                </LinkContainer>\r\n                <NavDropdown.Divider />\r\n                <LinkContainer to=\"/insertion-sort\">\r\n                  <NavDropdown.Item className=\"dropdown-item\">\r\n                    Insertion Sort\r\n                  </NavDropdown.Item>\r\n                </LinkContainer>\r\n                <NavDropdown.Divider />\r\n                <LinkContainer to=\"/merge-sort\">\r\n                  <NavDropdown.Item className=\"dropdown-item\">\r\n                    Merge Sort\r\n                  </NavDropdown.Item>\r\n                </LinkContainer>\r\n                <NavDropdown.Divider />\r\n                <LinkContainer to=\"/heap-sort\">\r\n                  <NavDropdown.Item className=\"dropdown-item\">\r\n                    Heap Sort\r\n                  </NavDropdown.Item>\r\n                </LinkContainer>\r\n              <NavDropdown.Divider />\r\n              <LinkContainer to=\"/quick-sort\">\r\n                  <NavDropdown.Item className=\"dropdown-item\">\r\n                    Quick Sort\r\n                  </NavDropdown.Item>\r\n                </LinkContainer>\r\n                \r\n              </NavDropdown>\r\n\r\n              <NavDropdown\r\n                className=\"dropdown\"\r\n                title=\"Speed\"\r\n                id=\"basic-nav-dropdown\"\r\n              >\r\n                <NavDropdown.Item\r\n                  onClick={handleClick25}\r\n                  className=\"dropdown-speed-item\"\r\n                >\r\n                  0.25x\r\n                </NavDropdown.Item>\r\n\r\n                <NavDropdown.Divider />\r\n\r\n                <NavDropdown.Item\r\n                  onClick={handleClick5}\r\n                  className=\"dropdown-speed-item\"\r\n                >\r\n                  0.5x\r\n                </NavDropdown.Item>\r\n\r\n                <NavDropdown.Divider />\r\n\r\n                <NavDropdown.Item\r\n                  onClick={handleClick1}\r\n                  className=\"dropdown-speed-item\"\r\n                >\r\n                  1.0x\r\n                </NavDropdown.Item>\r\n\r\n                <NavDropdown.Divider />\r\n\r\n                <NavDropdown.Item\r\n                  onClick={handleClick15}\r\n                  className=\"dropdown-speed-item\"\r\n                >\r\n                  1.5x\r\n                </NavDropdown.Item>\r\n\r\n                <NavDropdown.Divider />\r\n\r\n                <NavDropdown.Item\r\n                  onClick={handleClick75}\r\n                  className=\"dropdown-speed-item\"\r\n                >\r\n                  1.75x\r\n                </NavDropdown.Item>\r\n\r\n                <NavDropdown.Divider />\r\n\r\n                <NavDropdown.Item\r\n                  onClick={handleClick2}\r\n                  className=\"dropdown-speed-item\"\r\n                >\r\n                  2x\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n\r\n              <NavDropdown\r\n                className=\"dropdown\"\r\n                title=\"Array Size\"\r\n                id=\"basic-nav-dropdown\"\r\n              >\r\n                <NavDropdown.Item\r\n                  onClick={handleClickSize5}\r\n                  className=\"dropdown-speed-item\"\r\n                >\r\n                  5\r\n                </NavDropdown.Item>\r\n\r\n                <NavDropdown.Divider />\r\n\r\n                <NavDropdown.Item\r\n                  onClick={handleClickSize10}\r\n                  className=\"dropdown-speed-item\"\r\n                >\r\n                  10\r\n                </NavDropdown.Item>\r\n\r\n                <NavDropdown.Divider />\r\n\r\n                <NavDropdown.Item\r\n                  onClick={handleClickSize20}\r\n                  className=\"dropdown-speed-item\"\r\n                >\r\n                  20\r\n                </NavDropdown.Item>\r\n\r\n                <NavDropdown.Divider />\r\n\r\n                <NavDropdown.Item\r\n                  onClick={handleClickSize50}\r\n                  className=\"dropdown-speed-item\"\r\n                >\r\n                  50\r\n                </NavDropdown.Item>\r\n\r\n                <NavDropdown.Divider />\r\n\r\n                <NavDropdown.Item\r\n                  onClick={handleClickSize100}\r\n                  className=\"dropdown-speed-item\"\r\n                >\r\n                  100\r\n                </NavDropdown.Item>\r\n\r\n                <NavDropdown.Divider />\r\n\r\n                <NavDropdown.Item\r\n                  onClick={handleClickSize200}\r\n                  className=\"dropdown-speed-item\"\r\n                >\r\n                  200\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <Switch>\r\n          <Route component={Home} exact path=\"/\" />\r\n          <Route component={About} exact path=\"/about\" />\r\n          <Route component={SortingVisualizer} path=\"/sorting-visualizer\" />\r\n          <Route\r\n            component={() => (\r\n              <Bubble\r\n                length={ArrayLength}\r\n                delayy={millisecond}\r\n                width={width}\r\n                margin={margin}\r\n              />\r\n            )}\r\n             path=\"/bubble-sort\"\r\n          />\r\n          <Route\r\n            component={() => (\r\n              <Selection\r\n                length={ArrayLength}\r\n                delayy={millisecond}\r\n                width={width}\r\n                margin={margin}\r\n              />\r\n              )}\r\n            path=\"/selection-sort\"\r\n          />\r\n          <Route\r\n            component={() => (\r\n              <Insertion\r\n                length={ArrayLength}\r\n                delayy={millisecond}\r\n                width={width}\r\n                margin={margin}\r\n              />\r\n              )}\r\n           path=\"/insertion-sort\"\r\n          />\r\n          <Route\r\n            component={() => (\r\n              <Merge\r\n                length={ArrayLength}\r\n                delayy={millisecond}\r\n                width={width}\r\n                margin={margin}\r\n              />\r\n              )}\r\n           path=\"/merge-sort\"\r\n          />\r\n          <Route component={Quick} path=\"/quick-sort\" />\r\n          <Route component={Heap} path=\"/heap-sort\" />\r\n        </Switch>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\index.js",[],["83","84"],"C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\App.jsx",[],"C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\theme.js",[],"C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\Bubble\\Bubble.jsx",["85","86"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"../SortingVisualizer.css\";\r\nimport {\r\n  randomIntFromInterval,\r\n  createAnimation,\r\n  createComparisonColor,\r\n  createSwappingColor,\r\n  removeSwappingColor,\r\n  removeComparisonColor,\r\n  createSortedBarColor,\r\n  removeSortedBarColor,\r\n} from \"./BubbleHelpers\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport theme from \"../theme\";\r\nimport timeEventsManager from \"time-events-manager\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport Bounce from \"react-reveal/Bounce\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 150,\r\n    fontFamily: \"Open Sans Condensed\",\r\n    margin: \"auto\",\r\n  },\r\n});\r\nexport var milli = 400;\r\n\r\nconst Bubble = (props) => {\r\n  const classes = useStyles();\r\n  const [mainArray, setMainArray] = useState([]);\r\n  const [arrayLength, setArrayLength] = useState(props.length);\r\n  const [stateWidth, setStateWidth] = useState(props.width);\r\n  const [margin, setMargin] = useState(props.margin);\r\n  var delay = 1;\r\n\r\n  //removes any saved timeouts from the animation that was occuring.\r\n\r\n  timeEventsManager.timeoutCollection.removeAll();\r\n\r\n  //changes the milli variable when the slider's value change\r\n\r\n  const handleChange = (e, newMilli) => {\r\n    milli = newMilli;\r\n  };\r\n\r\n  useEffect(() => {\r\n    resetArray();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setArrayLength(props.length);\r\n  }, [props.length]);\r\n\r\n  useEffect(() => {\r\n    setStateWidth(props.width);\r\n  }, [props.width]);\r\n\r\n  useEffect(() => {\r\n    setMargin(props.margin);\r\n  }, [props.margin]);\r\n\r\n  //resets the array on refresh\r\n\r\n  const resetArray = () => {\r\n    const newArray = [];\r\n    for (var i = 0; i < arrayLength; i++) {\r\n      newArray.push(randomIntFromInterval(20, 240));\r\n    }\r\n    setMainArray(newArray);\r\n  };\r\n\r\n  //resets the array on generate new array button click (to remove the colors of the sorted bars).\r\n\r\n  const resetArraySecond = () => {\r\n    for (var j = 0; j < arrayLength; j++) {\r\n      removeSortedBarColor(j);\r\n    }\r\n\r\n    const newArray = [];\r\n    for (var i = 0; i < arrayLength; i++) {\r\n      newArray.push(randomIntFromInterval(20, 240));\r\n    }\r\n\r\n    setMainArray(newArray);\r\n  };\r\n\r\n  //sets the state after the whole animation has finished\r\n\r\n  const settingState = (arr, delay) => {\r\n    setTimeout(() => {\r\n      setMainArray(arr);\r\n    }, milli * delay);\r\n  };\r\n\r\n  //bubble sort function\r\n\r\n  const bubbleSort = (arr) => {\r\n    for (var j = arr.length - 1; j > 0; j--) {\r\n      for (var i = 0; i < j; i++) {\r\n        createComparisonColor(i, i + 1, delay++);\r\n\r\n        if (arr[i + 1] < arr[i]) {\r\n          var temp = arr[i + 1];\r\n          arr[i + 1] = arr[i];\r\n          arr[i] = temp;\r\n          createSwappingColor(i, i + 1, delay++);\r\n          createAnimation(i, i + 1, delay++);\r\n        }\r\n        removeSwappingColor(i, i + 1, delay++);\r\n        removeComparisonColor(i, i + 1, delay++);\r\n      }\r\n      createSortedBarColor(j, delay++);\r\n    }\r\n    createSortedBarColor(0, delay++);\r\n\r\n    settingState([...arr], delay++);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"sort-title\">\r\n        <h1>Bubble Sort</h1>\r\n      </div>\r\n\r\n      <div className=\"containerr\">\r\n        {mainArray.map((item, idx) => {\r\n          return (\r\n            <Bounce duration={2000}>\r\n              <div\r\n                className=\"bar\"\r\n                key={idx}\r\n                style={{\r\n                  height: `${item}px`,\r\n                  width: `${stateWidth}px`,\r\n                  marginLeft: `${margin}px`,\r\n                  marginRight: `${margin}px`,\r\n                }}\r\n              />\r\n            </Bounce>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"color-key-div\">\r\n        <div className=\"color-key-item\">\r\n          <div className=\"color-key-comparing\"></div>\r\n          <span>Comparing</span>\r\n        </div>\r\n        <div className=\"color-key-item\">\r\n          <div className=\"color-key-swapping\"></div>\r\n          <span>Swapping</span>\r\n        </div>\r\n        <div className=\"color-key-item\">\r\n          <div className=\"color-key-sorted\"></div>\r\n          <span>Sorted</span>\r\n        </div>\r\n      </div>\r\n      <div style={{ paddingTop: \"25px\" }}>\r\n        <ThemeProvider theme={theme}>\r\n          <div className={classes.root}>\r\n            <Slider\r\n              defaultValue={milli}\r\n              aria-labelledby=\"discrete-slider\"\r\n              valueLabelDisplay=\"auto\"\r\n              step={100}\r\n              marks\r\n              min={50}\r\n              max={800}\r\n              onChange={handleChange}\r\n            />\r\n            <Typography id=\"discrete-slider\" gutterBottom>\r\n              Delay in ms\r\n            </Typography>\r\n          </div>\r\n        </ThemeProvider>\r\n      </div>\r\n\r\n      <div className=\"buttons-div\">\r\n        <button className=\"buttons\" onClick={resetArraySecond}>\r\n          Generate New Array\r\n        </button>\r\n\r\n        <button className=\"buttons\" onClick={() => bubbleSort(mainArray)}>\r\n          Sortilize!\r\n        </button>\r\n      </div>\r\n      <hr />\r\n\r\n      <div className=\"brief-description\">\r\n        <Fade duration={2000}>\r\n          <h2>Brief Description</h2>\r\n        </Fade>\r\n        <Fade left duration={2000}>\r\n          <p>\r\n            Bubble Sort is a simple sorting algorithm that repeatedly steps\r\n            through the list, compares adjacent elements and swaps them if they\r\n            are in the wrong order.The pass through the list is repeated until\r\n            the list is sorted. The algorithm, which is a comparison sort, is\r\n            named for the way smaller or larger elements \"bubble\" to the top of\r\n            the list. Although the algorithm is simple, it is too slow and\r\n            impractical for most problems.\r\n          </p>\r\n        </Fade>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div className=\"performance\">\r\n        <Fade duration={2000}>\r\n          <h2>Performance</h2>\r\n        </Fade>\r\n        <Fade left duration={2000}>\r\n          <p>\r\n            Worst-case time complexity:{\" \"}\r\n            <span>\r\n              O(n<sup>2</sup>)\r\n            </span>\r\n          </p>\r\n          <p>\r\n            Average time complexity:{\" \"}\r\n            <span>\r\n              O(n<sup>2</sup>)\r\n            </span>\r\n          </p>\r\n          <p>\r\n            Best-case time complexity: <span>O(n)</span>\r\n          </p>\r\n          <p>\r\n            Worst-case space complexity: <span>O(1)</span>\r\n          </p>\r\n        </Fade>\r\n      </div>\r\n\r\n      <footer className=\"footer\">\r\n        <p>\r\n          Designed & Built by{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            href=\"https://www.linkedin.com/in/amr-hisham-668a211a5\"\r\n          >\r\n            Amr Hisham\r\n          </a>\r\n          , 2020.\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\nexport default Bubble;\r\n","C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\Bubble\\BubbleHelpers.js",[],"C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\Insertion\\Insertion.jsx",["87","88","89","90"],"C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\Selection\\Selection.jsx",["91","92","93"],"C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\Merge\\Merge.jsx",["94","95"],"C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\Quick\\Quick.jsx",["96"],"import React from \"react\";\r\n\r\nconst Quick = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"sort-title\">\r\n        <h1>Quick Sort</h1>\r\n      </div>\r\n\r\n      <div className=\"containerr\" style={{ height: \"140px\" }}>\r\n        <h2>Visualization Coming Soon...</h2>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div className=\"brief-description\">\r\n        <h2>Brief Description</h2>\r\n        <p>\r\n          Quick Sort is an efficient, in-place sorting algorith that in practice\r\n          is faster than MergeSort and HeapSort. However, it is not a stable\r\n          sorting algorithm, meaning that the relative positioning of equal sort\r\n          items is not preserved.Quicksort is a divide and conquer algorithm.\r\n          Quicksort first divides a large array into two smaller sub-arrays: the\r\n          low elements and the high elements. Quicksort can then recursively\r\n          sort the sub-arrays. The steps are:\r\n        </p>\r\n        <p>\r\n          <span>1.</span> Pick an element, called a pivot, from the array. This\r\n          is usually done at random.\r\n        </p>\r\n        <p>\r\n          <span>2.</span> Move pivot element to the start of the array.\r\n        </p>\r\n        <p>\r\n          <span>3.</span> Partitioning: reorder the array so that all elements\r\n          with values less than the pivot come before the pivot, while all\r\n          elements with values greater than the pivot come after it (equal\r\n          values can go either way). After this partitioning, the pivot is in\r\n          its final position. This is called the partition operation.\r\n        </p>\r\n        <p>\r\n          <span>4.</span> Recursively apply the above steps to the sub-array of\r\n          elements with smaller values and separately to the sub-array of\r\n          elements with greater values.\r\n        </p>\r\n        <p>\r\n          The base case of the recursion is an array of size zero or one, which\r\n          are sorted by definition.\r\n        </p>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div className=\"performance\">\r\n        <h2>Performance</h2>\r\n        <p>\r\n          Worst-case time complexity:{\" \"}\r\n          <span>\r\n            O(n<sup>2</sup>)\r\n          </span>\r\n        </p>\r\n        <p>\r\n          Average time complexity: <span>O(n log n)</span>\r\n        </p>\r\n        <p>\r\n          Best-case time complexity: <span>O(n log n)</span>\r\n        </p>\r\n        <p>\r\n          Worst-case space complexity: <span>O(log n)</span>\r\n        </p>\r\n      </div>\r\n\r\n      <footer className=\"footer\">\r\n        <p>\r\n          Designed & Built by{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            href=\"https://www.linkedin.com/in/amr-hisham-668a211a5\"\r\n          >\r\n            Amr Hisham\r\n          </a>\r\n          , 2020.\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quick;\r\n","C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\Heap\\Heap.jsx",["97"],"import React from \"react\";\r\n\r\nconst Heap = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"sort-title\">\r\n        <h1>Heap Sort</h1>\r\n      </div>\r\n\r\n      <div className=\"containerr\" style={{height: '140px'}}>\r\n        <h2>Visualization Coming Soon...</h2>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div className=\"brief-description\">\r\n        <h2>Brief Description</h2>\r\n        <p>\r\n          Heap Sort can be thought of as an improved selection sort that uses\r\n          the heap data structure rather than a linear-time search to find the\r\n          maximum or minimum element. It is an in-place sorting algorithm that\r\n          is not stable and has a somewhat slower running time than Quicksort in\r\n          practice.\r\n        </p>\r\n        <p>\r\n          The heapsort algorithm can be divided into two parts. In the first\r\n          step, a heap is built out of the data. The heap is often placed in an\r\n          array with the layout of a complete binary tree. In the second step, a\r\n          sorted array is created by repeatedly removing the largest element\r\n          from the heap (the root of the heap), and inserting it into the array.\r\n          The heap is updated after each removal to maintain the heap property.\r\n          Once all objects have been removed from the heap, the result is a\r\n          sorted array.\r\n        </p>\r\n        <p>\r\n          <span>1.</span>Call the buildMaxHeap() function on the list. Also\r\n          referred to as heapify(), this builds a heap from a list in O(n)\r\n          operations.\r\n        </p>\r\n        <p>\r\n          <span>2.</span>Swap the first element of the list with the final\r\n          element. Decrease the considered range of the list by one.\r\n        </p>\r\n        <p>\r\n          <span>3.</span>Call the siftDown(), also called maxHeapify() function\r\n          on the list to sift the new first element to its appropriate index in\r\n          the heap.\r\n        </p>\r\n        <p>\r\n          <span>4.</span>Go to step (2) unless the considered range of the list\r\n          is one element.\r\n        </p>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div className=\"performance\">\r\n        <h2>Performance</h2>\r\n        <p>\r\n          Worst-case time complexity: <span>O(n log n)</span>\r\n        </p>\r\n        <p>\r\n          Average time complexity: <span>O(n log n)</span>\r\n        </p>\r\n        <p>\r\n          Best-case time complexity: <span>O(n log n)</span>\r\n        </p>\r\n        <p>\r\n          Worst-case space complexity: <span>O(1)</span>\r\n        </p>\r\n      </div>\r\n\r\n      <footer className=\"footer\">\r\n        <p>\r\n          Designed & Built by{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            href=\"https://www.linkedin.com/in/amr-hisham-668a211a5\"\r\n          >\r\n            Amr Hisham\r\n          </a>\r\n          , 2020.\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Heap;\r\n","C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\Home\\Home.jsx",["98","99","100"],"import React from \"react\";\r\nimport \"./Home.css\";\r\nimport image from \"./images/nImage.png\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport timeEventsManager from \"time-events-manager\";\r\nimport Wobble from \"react-reveal/Wobble\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport Typical from \"react-typical\";\r\n\r\nfunction Home() {\r\n  timeEventsManager.timeoutCollection.removeAll();\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"col11\">\r\n            <Fade duration={1800}>\r\n              <h1 className=\"heading\">\r\n                Welcome To <span>Sortilizer</span>,\r\n              </h1>\r\n            </Fade>\r\n            <Fade left delay={300} duration={1500}>\r\n              <h3 className=\"description\">\r\n                By using Sortilizer, one can easily visualize\r\n                <br />\r\n                <span>\r\n                <Typical\r\n                  steps={[\"Bubble Sort\", 1500, \"Selection Sort\", 1500, \"Insertion Sort\", 1500, \"Merge Sort\", 1500, \"Quick Sort\", 1500, \"Heap Sort\", 1500]}\r\n                  loop={Infinity}\r\n                  wrapper=\"b\"\r\n                />\r\n                </span><br /> and be able to deeply\r\n                understand them.\r\n              </h3>\r\n            </Fade>\r\n\r\n            <Fade delay={1000} duration={2000}>\r\n              <button className=\"start-sortilizing-btn\">\r\n                <Link\r\n                  className=\"start-sortilizing-lnk\"\r\n                  to=\"/sorting-visualizer\"\r\n                >\r\n                  Start Sortilizing!\r\n                </Link>\r\n              </button>\r\n            </Fade>\r\n          </Col>\r\n\r\n          <Col>\r\n            <Fade right delay={500} duration={1400}>\r\n              <img className=\"img\" src={image} />\r\n            </Fade>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      <footer className=\"footer-home\">\r\n        <p>\r\n          Designed & Built by{\" \"}\r\n          <a\r\n            target=\"_blank\"\r\n            href=\"https://www.linkedin.com/in/amr-hisham-668a211a5\"\r\n          >\r\n            Amr Hisham\r\n          </a>\r\n          , 2020.\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\About\\About.jsx",[],"C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\StartSortilizing\\SortingVisualizer.jsx",["101"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../SortingVisualizer.css\";\r\n\r\nfunction SortingVisualizer() {\r\n  const [mainArray, setMainArray] = useState([]);\r\n\r\n  const randomIntFromInterval = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n\r\n  useEffect(() => {\r\n    resetArray();\r\n  }, []);\r\n\r\n  const resetArray = () => {\r\n    const newArray = [];\r\n    for (var i = 0; i < 20; i++) {\r\n      newArray.push(randomIntFromInterval(20, 250));\r\n    }\r\n    setMainArray(newArray);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"sort-title\">\r\n        <h1>Sorting Visualizer</h1>\r\n      </div>\r\n\r\n      <div className=\"containerr\">\r\n        {mainArray.map((item, idx) => {\r\n          return (\r\n            <div className=\"bar\" key={idx} style={{ height: `${item}px` }} />\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"margin-top\">\r\n        <div className=\"color-key-item\">\r\n          <span>Please Choose a Sorting Algorithm, and Size of the Array.</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"buttons-div\" style={{marginTop: '12px'}}>\r\n        <button disabled className=\"buttons-unsorted\">\r\n          Generate New Array\r\n        </button>\r\n        <button disabled className=\"buttons-unsorted\">\r\n          Sortilize!\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default SortingVisualizer;\r\n","C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\Insertion\\InsertionHelpers.js",[],"C:\\Users\\USER\\Desktop\\sorting-visualizer\\src\\components\\Selection\\SelectionHelpers.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":11,"column":17,"nodeType":"108","messageId":"109","endLine":11,"endColumn":21},{"ruleId":"106","severity":1,"message":"110","line":19,"column":5,"nodeType":"108","messageId":"109","endLine":19,"endColumn":11},{"ruleId":"102","replacedBy":"111"},{"ruleId":"104","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":52,"column":6,"nodeType":"115","endLine":52,"endColumn":8,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":242,"column":13,"nodeType":"119","endLine":242,"endColumn":28},{"ruleId":"113","severity":1,"message":"114","line":52,"column":6,"nodeType":"115","endLine":52,"endColumn":8,"suggestions":"120"},{"ruleId":"106","severity":1,"message":"121","line":77,"column":11,"nodeType":"108","messageId":"109","endLine":77,"endColumn":15},{"ruleId":"106","severity":1,"message":"122","line":91,"column":9,"nodeType":"108","messageId":"109","endLine":91,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":264,"column":13,"nodeType":"119","endLine":264,"endColumn":28},{"ruleId":"113","severity":1,"message":"114","line":52,"column":6,"nodeType":"115","endLine":52,"endColumn":8,"suggestions":"123"},{"ruleId":"106","severity":1,"message":"122","line":85,"column":9,"nodeType":"108","messageId":"109","endLine":85,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":257,"column":13,"nodeType":"119","endLine":257,"endColumn":28},{"ruleId":"113","severity":1,"message":"114","line":40,"column":6,"nodeType":"115","endLine":40,"endColumn":8,"suggestions":"124"},{"ruleId":"117","severity":1,"message":"118","line":320,"column":13,"nodeType":"119","endLine":320,"endColumn":28},{"ruleId":"117","severity":1,"message":"118","line":77,"column":13,"nodeType":"119","endLine":77,"endColumn":28},{"ruleId":"117","severity":1,"message":"118","line":77,"column":13,"nodeType":"119","endLine":77,"endColumn":28},{"ruleId":"106","severity":1,"message":"125","line":8,"column":8,"nodeType":"108","messageId":"109","endLine":8,"endColumn":14},{"ruleId":"126","severity":1,"message":"127","line":53,"column":15,"nodeType":"128","endLine":53,"endColumn":50},{"ruleId":"117","severity":1,"message":"118","line":63,"column":13,"nodeType":"119","endLine":63,"endColumn":28},{"ruleId":"113","severity":1,"message":"114","line":13,"column":6,"nodeType":"115","endLine":13,"endColumn":8,"suggestions":"129"},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'propss' is defined but never used.",["130"],["131"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'resetArray'. Either include it or remove the dependency array.","ArrayExpression",["132"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["133"],"'barr' is assigned a value but never used.","'settingState' is assigned a value but never used.",["134"],["135"],"'Wobble' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["136"],"no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"137","fix":"139"},{"desc":"137","fix":"140"},{"desc":"137","fix":"141"},{"desc":"137","fix":"142"},"Update the dependencies array to be: [resetArray]",{"range":"143","text":"144"},{"range":"145","text":"144"},{"range":"146","text":"144"},{"range":"147","text":"144"},{"range":"148","text":"144"},[1507,1509],"[resetArray]",[1462,1464],[1470,1472],[1213,1215],[341,343]]